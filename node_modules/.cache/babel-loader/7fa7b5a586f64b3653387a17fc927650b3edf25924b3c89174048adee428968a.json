{"ast":null,"code":"// Mock data\nconst mockBooks = [{\n  id: '1',\n  title: \"Project Hail Mary\",\n  author: \"Andy Weir\",\n  coverImage: \"https://images-na.ssl-images-amazon.com/images/S/compressed.photo.goodreads.com/books/1597695864i/54493401.jpg\",\n  pace: \"Fast\",\n  tone: [\"Hopeful\", \"Scientific\"],\n  themes: [\"Space\", \"Friendship\", \"Survival\"],\n  reviewSnippet: \"A brilliant mix of science, humor, and heart. Couldn't put it down!\",\n  bestFor: [\"Sci-fi fans\", \"Problem solvers\", \"Space enthusiasts\"],\n  isbn: \"9780593135204\",\n  publishedYear: 2021,\n  rating: 4.5,\n  description: \"A lone astronaut must save the earth from disaster in this incredible new science-based thriller from the #1 New York Times bestselling author of The Martian.\"\n}, {\n  id: '2',\n  title: \"Klara and the Sun\",\n  author: \"Kazuo Ishiguro\",\n  coverImage: \"https://images-na.ssl-images-amazon.com/images/S/compressed.photo.goodreads.com/books/1605039531i/54120408.jpg\",\n  pace: \"Moderate\",\n  tone: [\"Thoughtful\", \"Poetic\"],\n  themes: [\"AI\", \"Humanity\", \"Love\"],\n  reviewSnippet: \"A beautiful exploration of what it means to be human\",\n  bestFor: [\"Literary fiction\", \"Philosophical readers\", \"AI enthusiasts\"],\n  isbn: \"9780593318171\",\n  publishedYear: 2021,\n  rating: 4.2,\n  description: \"From the bestselling author of Never Let Me Go and The Remains of the Day, a stunning new novel—his first since winning the Nobel Prize in Literature—about the mysteries of love and the meaning of human connection.\"\n}];\nconst mockThreads = [{\n  id: '1',\n  title: \"Books like Black Mirror\",\n  description: \"Looking for mind-bending sci-fi that makes you question reality\",\n  upvotes: 234,\n  comments: 45,\n  timestamp: \"2h ago\",\n  tags: [\"Sci-Fi\", \"Dystopian\", \"Thriller\"],\n  createdBy: \"user1\",\n  books: [mockBooks[0]]\n}, {\n  id: '2',\n  title: \"Page-turners for slump days\",\n  description: \"Need something to get me out of my reading slump\",\n  upvotes: 189,\n  comments: 32,\n  timestamp: \"4h ago\",\n  tags: [\"Fast-paced\", \"Engaging\", \"Contemporary\"],\n  createdBy: \"user2\"\n}];\n\n// Simulated API delay\nconst delay = ms => new Promise(resolve => setTimeout(resolve, ms));\n\n// API functions\nexport const api = {\n  // Books\n  getBooks: async () => {\n    await delay(500); // Simulate network delay\n    return mockBooks;\n  },\n  getBookById: async id => {\n    await delay(300);\n    return mockBooks.find(book => book.id === id);\n  },\n  searchBooks: async query => {\n    await delay(500);\n    const searchTerm = query.toLowerCase();\n    return mockBooks.filter(book => book.title.toLowerCase().includes(searchTerm) || book.author.toLowerCase().includes(searchTerm) || book.themes.some(theme => theme.toLowerCase().includes(searchTerm)));\n  },\n  // Threads\n  getThreads: async () => {\n    await delay(500);\n    return mockThreads;\n  },\n  getThreadById: async id => {\n    await delay(300);\n    return mockThreads.find(thread => thread.id === id);\n  },\n  createThread: async thread => {\n    await delay(500);\n    const newThread = {\n      ...thread,\n      id: String(mockThreads.length + 1),\n      upvotes: 0,\n      comments: 0,\n      timestamp: 'Just now'\n    };\n    mockThreads.push(newThread);\n    return newThread;\n  },\n  // User preferences\n  getUserPreferences: async userId => {\n    await delay(300);\n    return {\n      favoriteGenres: [\"Sci-Fi\", \"Literary Fiction\"],\n      preferredPace: \"Moderate\",\n      favoriteThemes: [\"AI\", \"Space\", \"Humanity\"]\n    };\n  }\n};","map":{"version":3,"names":["mockBooks","id","title","author","coverImage","pace","tone","themes","reviewSnippet","bestFor","isbn","publishedYear","rating","description","mockThreads","upvotes","comments","timestamp","tags","createdBy","books","delay","ms","Promise","resolve","setTimeout","api","getBooks","getBookById","find","book","searchBooks","query","searchTerm","toLowerCase","filter","includes","some","theme","getThreads","getThreadById","thread","createThread","newThread","String","length","push","getUserPreferences","userId","favoriteGenres","preferredPace","favoriteThemes"],"sources":["/Users/Projects/ChapterOne/src/services/api.ts"],"sourcesContent":["import { Book, Thread, User } from '../types';\n\n// Mock data\nconst mockBooks: Book[] = [\n  {\n    id: '1',\n    title: \"Project Hail Mary\",\n    author: \"Andy Weir\",\n    coverImage: \"https://images-na.ssl-images-amazon.com/images/S/compressed.photo.goodreads.com/books/1597695864i/54493401.jpg\",\n    pace: \"Fast\",\n    tone: [\"Hopeful\", \"Scientific\"],\n    themes: [\"Space\", \"Friendship\", \"Survival\"],\n    reviewSnippet: \"A brilliant mix of science, humor, and heart. Couldn't put it down!\",\n    bestFor: [\"Sci-fi fans\", \"Problem solvers\", \"Space enthusiasts\"],\n    isbn: \"9780593135204\",\n    publishedYear: 2021,\n    rating: 4.5,\n    description: \"A lone astronaut must save the earth from disaster in this incredible new science-based thriller from the #1 New York Times bestselling author of The Martian.\"\n  },\n  {\n    id: '2',\n    title: \"Klara and the Sun\",\n    author: \"Kazuo Ishiguro\",\n    coverImage: \"https://images-na.ssl-images-amazon.com/images/S/compressed.photo.goodreads.com/books/1605039531i/54120408.jpg\",\n    pace: \"Moderate\",\n    tone: [\"Thoughtful\", \"Poetic\"],\n    themes: [\"AI\", \"Humanity\", \"Love\"],\n    reviewSnippet: \"A beautiful exploration of what it means to be human\",\n    bestFor: [\"Literary fiction\", \"Philosophical readers\", \"AI enthusiasts\"],\n    isbn: \"9780593318171\",\n    publishedYear: 2021,\n    rating: 4.2,\n    description: \"From the bestselling author of Never Let Me Go and The Remains of the Day, a stunning new novel—his first since winning the Nobel Prize in Literature—about the mysteries of love and the meaning of human connection.\"\n  }\n];\n\nconst mockThreads: Thread[] = [\n  {\n    id: '1',\n    title: \"Books like Black Mirror\",\n    description: \"Looking for mind-bending sci-fi that makes you question reality\",\n    upvotes: 234,\n    comments: 45,\n    timestamp: \"2h ago\",\n    tags: [\"Sci-Fi\", \"Dystopian\", \"Thriller\"],\n    createdBy: \"user1\",\n    books: [mockBooks[0]]\n  },\n  {\n    id: '2',\n    title: \"Page-turners for slump days\",\n    description: \"Need something to get me out of my reading slump\",\n    upvotes: 189,\n    comments: 32,\n    timestamp: \"4h ago\",\n    tags: [\"Fast-paced\", \"Engaging\", \"Contemporary\"],\n    createdBy: \"user2\"\n  }\n];\n\n// Simulated API delay\nconst delay = (ms: number) => new Promise(resolve => setTimeout(resolve, ms));\n\n// API functions\nexport const api = {\n  // Books\n  getBooks: async (): Promise<Book[]> => {\n    await delay(500); // Simulate network delay\n    return mockBooks;\n  },\n\n  getBookById: async (id: string): Promise<Book | undefined> => {\n    await delay(300);\n    return mockBooks.find(book => book.id === id);\n  },\n\n  searchBooks: async (query: string): Promise<Book[]> => {\n    await delay(500);\n    const searchTerm = query.toLowerCase();\n    return mockBooks.filter(book => \n      book.title.toLowerCase().includes(searchTerm) ||\n      book.author.toLowerCase().includes(searchTerm) ||\n      book.themes.some(theme => theme.toLowerCase().includes(searchTerm))\n    );\n  },\n\n  // Threads\n  getThreads: async (): Promise<Thread[]> => {\n    await delay(500);\n    return mockThreads;\n  },\n\n  getThreadById: async (id: string): Promise<Thread | undefined> => {\n    await delay(300);\n    return mockThreads.find(thread => thread.id === id);\n  },\n\n  createThread: async (thread: Omit<Thread, 'id' | 'upvotes' | 'comments' | 'timestamp'>): Promise<Thread> => {\n    await delay(500);\n    const newThread: Thread = {\n      ...thread,\n      id: String(mockThreads.length + 1),\n      upvotes: 0,\n      comments: 0,\n      timestamp: 'Just now'\n    };\n    mockThreads.push(newThread);\n    return newThread;\n  },\n\n  // User preferences\n  getUserPreferences: async (userId: string): Promise<User['readingPreferences']> => {\n    await delay(300);\n    return {\n      favoriteGenres: [\"Sci-Fi\", \"Literary Fiction\"],\n      preferredPace: \"Moderate\",\n      favoriteThemes: [\"AI\", \"Space\", \"Humanity\"]\n    };\n  }\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}