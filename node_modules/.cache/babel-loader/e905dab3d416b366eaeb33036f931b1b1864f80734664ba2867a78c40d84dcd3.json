{"ast":null,"code":"var _jsxFileName = \"/Users/Projects/ChapterOne/src/components/features/HomePage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { SearchBar } from './SearchBar';\nimport { ThreadCard } from './ThreadCard';\nimport { BookCard } from './BookCard';\nimport { api } from '../../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const HomePage = () => {\n  _s();\n  const [trendingBooks, setTrendingBooks] = useState([]);\n  const [threads, setThreads] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setIsLoading(true);\n        const [books, threadsData] = await Promise.all([api.getBooks(true),\n        // Include external data for trending books\n        api.getThreads()]);\n\n        // Make sure all books have the required fields\n        const processedBooks = books.map(book => ({\n          ...book,\n          // If description is missing, use an empty string\n          description: book.description || book.reviewSnippet || \"No description available\",\n          // Make sure other required fields are present\n          pace: book.pace || \"Moderate\"\n        }));\n\n        // Process threads to match ThreadCard component props\n        const processedThreads = threadsData.map(thread => ({\n          ...thread,\n          // Convert createdAt to timestamp format\n          timestamp: new Date(thread.createdAt).toLocaleDateString()\n        }));\n        setTrendingBooks(processedBooks);\n        setThreads(processedThreads);\n      } catch (err) {\n        setError('Failed to load data. Please try again later.');\n        console.error('Error fetching data:', err);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  const handleSearch = async (query, searchType = 'all') => {\n    try {\n      const results = await api.searchBooks(query, searchType, true);\n      // Apply the same processing to search results\n      const processedResults = results.map(book => ({\n        ...book,\n        description: book.description || book.reviewSnippet || \"No description available\",\n        pace: book.pace || \"Moderate\"\n      }));\n      if (processedResults.length > 0) {\n        setTrendingBooks(processedResults);\n      } else {\n        // If no results, show a message or keep existing books\n        setError(`No books found for \"${query}\". Try a different search.`);\n        setTimeout(() => setError(null), 3000); // Clear error after 3 seconds\n      }\n    } catch (err) {\n      console.error('Error searching books:', err);\n      setError('Error searching for books. Please try again.');\n      setTimeout(() => setError(null), 3000); // Clear error after 3 seconds\n    }\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center min-h-[60vh]\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-primary-600\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-12\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"text-center space-y-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-4xl font-bold text-primary-900\",\n        children: \"Discover Your Next Great Read\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-xl text-primary-600 max-w-2xl mx-auto\",\n        children: \"Get personalized book recommendations based on your mood, interests, and reading style\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-w-3xl mx-auto\",\n        children: /*#__PURE__*/_jsxDEV(SearchBar, {\n          onSearch: handleSearch,\n          onMoodSelect: mood => handleSearch(mood, 'mood')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-red-500 mt-4\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold text-primary-900 mb-6\",\n        children: \"Trending Now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid gap-4 md:grid-cols-2\",\n        children: trendingBooks.map(book => /*#__PURE__*/_jsxDEV(BookCard, {\n          ...book\n        }, book.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold text-primary-900 mb-6\",\n        children: \"Popular Threads\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid gap-4 md:grid-cols-2\",\n        children: threads.map(thread => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(ThreadCard, {\n            id: thread.id,\n            title: thread.title,\n            description: thread.description,\n            upvotes: thread.upvotes,\n            comments: thread.comments,\n            timestamp: thread.timestamp || new Date(thread.createdAt).toLocaleDateString(),\n            tags: thread.tags || []\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this)\n        }, thread.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"vp5rgPCuft40ZaLmoPRT6kSQWy0=\");\n_c = HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useEffect","useState","SearchBar","ThreadCard","BookCard","api","jsxDEV","_jsxDEV","HomePage","_s","trendingBooks","setTrendingBooks","threads","setThreads","isLoading","setIsLoading","error","setError","fetchData","books","threadsData","Promise","all","getBooks","getThreads","processedBooks","map","book","description","reviewSnippet","pace","processedThreads","thread","timestamp","Date","createdAt","toLocaleDateString","err","console","handleSearch","query","searchType","results","searchBooks","processedResults","length","setTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","onMoodSelect","mood","id","title","upvotes","comments","tags","_c","$RefreshReg$"],"sources":["/Users/Projects/ChapterOne/src/components/features/HomePage.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { SearchBar } from './SearchBar';\nimport { ThreadCard } from './ThreadCard';\nimport { BookCard } from './BookCard';\nimport { Book, Thread } from '../../types';\nimport { api } from '../../services/api';\n\nexport const HomePage = () => {\n  const [trendingBooks, setTrendingBooks] = useState<Book[]>([]);\n  const [threads, setThreads] = useState<Thread[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setIsLoading(true);\n        const [books, threadsData] = await Promise.all([\n          api.getBooks(true),  // Include external data for trending books\n          api.getThreads()\n        ]);\n        \n        // Make sure all books have the required fields\n        const processedBooks = books.map(book => ({\n          ...book,\n          // If description is missing, use an empty string\n          description: book.description || book.reviewSnippet || \"No description available\",\n          // Make sure other required fields are present\n          pace: book.pace || \"Moderate\" as Book[\"pace\"],\n        }));\n        \n        // Process threads to match ThreadCard component props\n        const processedThreads = threadsData.map(thread => ({\n          ...thread,\n          // Convert createdAt to timestamp format\n          timestamp: new Date(thread.createdAt).toLocaleDateString()\n        }));\n        \n        setTrendingBooks(processedBooks);\n        setThreads(processedThreads);\n      } catch (err) {\n        setError('Failed to load data. Please try again later.');\n        console.error('Error fetching data:', err);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const handleSearch = async (query: string, searchType: string = 'all') => {\n    try {\n      const results = await api.searchBooks(query, searchType, true);\n      // Apply the same processing to search results\n      const processedResults = results.map(book => ({\n        ...book,\n        description: book.description || book.reviewSnippet || \"No description available\",\n        pace: book.pace || \"Moderate\" as Book[\"pace\"],\n      }));\n      \n      if (processedResults.length > 0) {\n        setTrendingBooks(processedResults);\n      } else {\n        // If no results, show a message or keep existing books\n        setError(`No books found for \"${query}\". Try a different search.`);\n        setTimeout(() => setError(null), 3000); // Clear error after 3 seconds\n      }\n    } catch (err) {\n      console.error('Error searching books:', err);\n      setError('Error searching for books. Please try again.');\n      setTimeout(() => setError(null), 3000); // Clear error after 3 seconds\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"flex items-center justify-center min-h-[60vh]\">\n        <div className=\"text-primary-600\">Loading...</div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-12\">\n      {/* Hero Section */}\n      <section className=\"text-center space-y-4\">\n        <h1 className=\"text-4xl font-bold text-primary-900\">\n          Discover Your Next Great Read\n        </h1>\n        <p className=\"text-xl text-primary-600 max-w-2xl mx-auto\">\n          Get personalized book recommendations based on your mood, interests, and reading style\n        </p>\n        <div className=\"max-w-3xl mx-auto\">\n          <SearchBar \n            onSearch={handleSearch}\n            onMoodSelect={(mood) => handleSearch(mood, 'mood')}\n          />\n        </div>\n        \n        {/* Search error message */}\n        {error && (\n          <div className=\"text-red-500 mt-4\">{error}</div>\n        )}\n      </section>\n\n      {/* Trending Books */}\n      <section>\n        <h2 className=\"text-2xl font-bold text-primary-900 mb-6\">Trending Now</h2>\n        <div className=\"grid gap-4 md:grid-cols-2\">\n          {trendingBooks.map((book) => (\n            <BookCard key={book.id} {...book} />\n          ))}\n        </div>\n      </section>\n\n      {/* Popular Threads */}\n      <section>\n        <h2 className=\"text-2xl font-bold text-primary-900 mb-6\">Popular Threads</h2>\n        <div className=\"grid gap-4 md:grid-cols-2\">\n          {threads.map((thread) => (\n            <div key={thread.id}>\n              <ThreadCard\n                id={thread.id}\n                title={thread.title}\n                description={thread.description}\n                upvotes={thread.upvotes}\n                comments={thread.comments}\n                timestamp={thread.timestamp || new Date(thread.createdAt).toLocaleDateString()}\n                tags={thread.tags || []}\n              />\n            </div>\n          ))}\n        </div>\n      </section>\n    </div>\n  );\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}