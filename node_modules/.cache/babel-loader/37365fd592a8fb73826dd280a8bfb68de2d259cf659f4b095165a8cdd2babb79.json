{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const ThemeContext=/*#__PURE__*/createContext(undefined);export const useTheme=()=>{const context=useContext(ThemeContext);if(context===undefined){throw new Error('useTheme must be used within a ThemeProvider');}return context;};export const ThemeProvider=_ref=>{let{children}=_ref;const[theme,setThemeState]=useState('light');// Load theme from localStorage on mount\nuseEffect(()=>{const savedTheme=localStorage.getItem('chapterone-theme');if(savedTheme&&['light','dark','rainbow'].includes(savedTheme)){setThemeState(savedTheme);}},[]);// Apply theme to document and save to localStorage\nuseEffect(()=>{document.documentElement.setAttribute('data-theme',theme);localStorage.setItem('chapterone-theme',theme);// Add theme-specific classes to body\ndocument.body.className=document.body.className.replace(/theme-\\w+/g,'');document.body.classList.add(\"theme-\".concat(theme));},[theme]);const setTheme=newTheme=>{setThemeState(newTheme);};const toggleTheme=()=>{const themeOrder=['light','dark','rainbow'];const currentIndex=themeOrder.indexOf(theme);const nextIndex=(currentIndex+1)%themeOrder.length;setTheme(themeOrder[nextIndex]);};return/*#__PURE__*/_jsx(ThemeContext.Provider,{value:{theme,setTheme,toggleTheme},children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsx","_jsx","ThemeContext","undefined","useTheme","context","Error","ThemeProvider","_ref","children","theme","setThemeState","savedTheme","localStorage","getItem","includes","document","documentElement","setAttribute","setItem","body","className","replace","classList","add","concat","setTheme","newTheme","toggleTheme","themeOrder","currentIndex","indexOf","nextIndex","length","Provider","value"],"sources":["/Users/ChapterOne/src/contexts/ThemeContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\n\nexport type ThemeMode = 'light' | 'dark' | 'rainbow';\n\ninterface ThemeContextType {\n  theme: ThemeMode;\n  setTheme: (theme: ThemeMode) => void;\n  toggleTheme: () => void;\n}\n\nconst ThemeContext = createContext<ThemeContextType | undefined>(undefined);\n\nexport const useTheme = () => {\n  const context = useContext(ThemeContext);\n  if (context === undefined) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n};\n\ninterface ThemeProviderProps {\n  children: ReactNode;\n}\n\nexport const ThemeProvider: React.FC<ThemeProviderProps> = ({ children }) => {\n  const [theme, setThemeState] = useState<ThemeMode>('light');\n\n  // Load theme from localStorage on mount\n  useEffect(() => {\n    const savedTheme = localStorage.getItem('chapterone-theme') as ThemeMode;\n    if (savedTheme && ['light', 'dark', 'rainbow'].includes(savedTheme)) {\n      setThemeState(savedTheme);\n    }\n  }, []);\n\n  // Apply theme to document and save to localStorage\n  useEffect(() => {\n    document.documentElement.setAttribute('data-theme', theme);\n    localStorage.setItem('chapterone-theme', theme);\n    \n    // Add theme-specific classes to body\n    document.body.className = document.body.className.replace(/theme-\\w+/g, '');\n    document.body.classList.add(`theme-${theme}`);\n  }, [theme]);\n\n  const setTheme = (newTheme: ThemeMode) => {\n    setThemeState(newTheme);\n  };\n\n  const toggleTheme = () => {\n    const themeOrder: ThemeMode[] = ['light', 'dark', 'rainbow'];\n    const currentIndex = themeOrder.indexOf(theme);\n    const nextIndex = (currentIndex + 1) % themeOrder.length;\n    setTheme(themeOrder[nextIndex]);\n  };\n\n  return (\n    <ThemeContext.Provider value={{ theme, setTheme, toggleTheme }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n}; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,QAAQ,CAAEC,SAAS,KAAmB,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAUzF,KAAM,CAAAC,YAAY,cAAGN,aAAa,CAA+BO,SAAS,CAAC,CAE3E,MAAO,MAAM,CAAAC,QAAQ,CAAGA,CAAA,GAAM,CAC5B,KAAM,CAAAC,OAAO,CAAGR,UAAU,CAACK,YAAY,CAAC,CACxC,GAAIG,OAAO,GAAKF,SAAS,CAAE,CACzB,KAAM,IAAI,CAAAG,KAAK,CAAC,8CAA8C,CAAC,CACjE,CACA,MAAO,CAAAD,OAAO,CAChB,CAAC,CAMD,MAAO,MAAM,CAAAE,aAA2C,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACtE,KAAM,CAACE,KAAK,CAAEC,aAAa,CAAC,CAAGb,QAAQ,CAAY,OAAO,CAAC,CAE3D;AACAC,SAAS,CAAC,IAAM,CACd,KAAM,CAAAa,UAAU,CAAGC,YAAY,CAACC,OAAO,CAAC,kBAAkB,CAAc,CACxE,GAAIF,UAAU,EAAI,CAAC,OAAO,CAAE,MAAM,CAAE,SAAS,CAAC,CAACG,QAAQ,CAACH,UAAU,CAAC,CAAE,CACnED,aAAa,CAACC,UAAU,CAAC,CAC3B,CACF,CAAC,CAAE,EAAE,CAAC,CAEN;AACAb,SAAS,CAAC,IAAM,CACdiB,QAAQ,CAACC,eAAe,CAACC,YAAY,CAAC,YAAY,CAAER,KAAK,CAAC,CAC1DG,YAAY,CAACM,OAAO,CAAC,kBAAkB,CAAET,KAAK,CAAC,CAE/C;AACAM,QAAQ,CAACI,IAAI,CAACC,SAAS,CAAGL,QAAQ,CAACI,IAAI,CAACC,SAAS,CAACC,OAAO,CAAC,YAAY,CAAE,EAAE,CAAC,CAC3EN,QAAQ,CAACI,IAAI,CAACG,SAAS,CAACC,GAAG,UAAAC,MAAA,CAAUf,KAAK,CAAE,CAAC,CAC/C,CAAC,CAAE,CAACA,KAAK,CAAC,CAAC,CAEX,KAAM,CAAAgB,QAAQ,CAAIC,QAAmB,EAAK,CACxChB,aAAa,CAACgB,QAAQ,CAAC,CACzB,CAAC,CAED,KAAM,CAAAC,WAAW,CAAGA,CAAA,GAAM,CACxB,KAAM,CAAAC,UAAuB,CAAG,CAAC,OAAO,CAAE,MAAM,CAAE,SAAS,CAAC,CAC5D,KAAM,CAAAC,YAAY,CAAGD,UAAU,CAACE,OAAO,CAACrB,KAAK,CAAC,CAC9C,KAAM,CAAAsB,SAAS,CAAG,CAACF,YAAY,CAAG,CAAC,EAAID,UAAU,CAACI,MAAM,CACxDP,QAAQ,CAACG,UAAU,CAACG,SAAS,CAAC,CAAC,CACjC,CAAC,CAED,mBACE/B,IAAA,CAACC,YAAY,CAACgC,QAAQ,EAACC,KAAK,CAAE,CAAEzB,KAAK,CAAEgB,QAAQ,CAAEE,WAAY,CAAE,CAAAnB,QAAA,CAC5DA,QAAQ,CACY,CAAC,CAE5B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}