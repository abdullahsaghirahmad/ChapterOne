{"ast":null,"code":"var _jsxFileName = \"/Users/Projects/ChapterOne/src/contexts/ThemeContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext(undefined);\nexport const useTheme = () => {\n  _s();\n  const context = useContext(ThemeContext);\n  if (context === undefined) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n};\n_s(useTheme, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s2();\n  const [theme, setThemeState] = useState('light');\n\n  // Load theme from localStorage on mount\n  useEffect(() => {\n    const savedTheme = localStorage.getItem('chapterone-theme');\n    if (savedTheme && ['light', 'dark', 'rainbow'].includes(savedTheme)) {\n      setThemeState(savedTheme);\n    }\n  }, []);\n\n  // Apply theme to document and save to localStorage\n  useEffect(() => {\n    document.documentElement.setAttribute('data-theme', theme);\n    localStorage.setItem('chapterone-theme', theme);\n\n    // Add theme-specific classes to body\n    document.body.className = document.body.className.replace(/theme-\\w+/g, '');\n    document.body.classList.add(`theme-${theme}`);\n  }, [theme]);\n  const setTheme = newTheme => {\n    setThemeState(newTheme);\n  };\n  const toggleTheme = () => {\n    const themeOrder = ['light', 'dark', 'rainbow'];\n    const currentIndex = themeOrder.indexOf(theme);\n    const nextIndex = (currentIndex + 1) % themeOrder.length;\n    setTheme(themeOrder[nextIndex]);\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      theme,\n      setTheme,\n      toggleTheme\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s2(ThemeProvider, \"Jg7kX3tl44AHRN9Wplaj1WmEy+o=\");\n_c = ThemeProvider;\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","ThemeContext","undefined","useTheme","_s","context","Error","ThemeProvider","children","_s2","theme","setThemeState","savedTheme","localStorage","getItem","includes","document","documentElement","setAttribute","setItem","body","className","replace","classList","add","setTheme","newTheme","toggleTheme","themeOrder","currentIndex","indexOf","nextIndex","length","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/Projects/ChapterOne/src/contexts/ThemeContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\n\nexport type ThemeMode = 'light' | 'dark' | 'rainbow';\n\ninterface ThemeContextType {\n  theme: ThemeMode;\n  setTheme: (theme: ThemeMode) => void;\n  toggleTheme: () => void;\n}\n\nconst ThemeContext = createContext<ThemeContextType | undefined>(undefined);\n\nexport const useTheme = () => {\n  const context = useContext(ThemeContext);\n  if (context === undefined) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n};\n\ninterface ThemeProviderProps {\n  children: ReactNode;\n}\n\nexport const ThemeProvider: React.FC<ThemeProviderProps> = ({ children }) => {\n  const [theme, setThemeState] = useState<ThemeMode>('light');\n\n  // Load theme from localStorage on mount\n  useEffect(() => {\n    const savedTheme = localStorage.getItem('chapterone-theme') as ThemeMode;\n    if (savedTheme && ['light', 'dark', 'rainbow'].includes(savedTheme)) {\n      setThemeState(savedTheme);\n    }\n  }, []);\n\n  // Apply theme to document and save to localStorage\n  useEffect(() => {\n    document.documentElement.setAttribute('data-theme', theme);\n    localStorage.setItem('chapterone-theme', theme);\n    \n    // Add theme-specific classes to body\n    document.body.className = document.body.className.replace(/theme-\\w+/g, '');\n    document.body.classList.add(`theme-${theme}`);\n  }, [theme]);\n\n  const setTheme = (newTheme: ThemeMode) => {\n    setThemeState(newTheme);\n  };\n\n  const toggleTheme = () => {\n    const themeOrder: ThemeMode[] = ['light', 'dark', 'rainbow'];\n    const currentIndex = themeOrder.indexOf(theme);\n    const nextIndex = (currentIndex + 1) % themeOrder.length;\n    setTheme(themeOrder[nextIndex]);\n  };\n\n  return (\n    <ThemeContext.Provider value={{ theme, setTheme, toggleTheme }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n}; "],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAmB,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAUzF,MAAMC,YAAY,gBAAGN,aAAa,CAA+BO,SAAS,CAAC;AAE3E,OAAO,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAMC,OAAO,GAAGT,UAAU,CAACK,YAAY,CAAC;EACxC,IAAII,OAAO,KAAKH,SAAS,EAAE;IACzB,MAAM,IAAII,KAAK,CAAC,8CAA8C,CAAC;EACjE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,QAAQ;AAYrB,OAAO,MAAMI,aAA2C,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC3E,MAAM,CAACC,KAAK,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAY,OAAO,CAAC;;EAE3D;EACAC,SAAS,CAAC,MAAM;IACd,MAAMc,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,kBAAkB,CAAc;IACxE,IAAIF,UAAU,IAAI,CAAC,OAAO,EAAE,MAAM,EAAE,SAAS,CAAC,CAACG,QAAQ,CAACH,UAAU,CAAC,EAAE;MACnED,aAAa,CAACC,UAAU,CAAC;IAC3B;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAd,SAAS,CAAC,MAAM;IACdkB,QAAQ,CAACC,eAAe,CAACC,YAAY,CAAC,YAAY,EAAER,KAAK,CAAC;IAC1DG,YAAY,CAACM,OAAO,CAAC,kBAAkB,EAAET,KAAK,CAAC;;IAE/C;IACAM,QAAQ,CAACI,IAAI,CAACC,SAAS,GAAGL,QAAQ,CAACI,IAAI,CAACC,SAAS,CAACC,OAAO,CAAC,YAAY,EAAE,EAAE,CAAC;IAC3EN,QAAQ,CAACI,IAAI,CAACG,SAAS,CAACC,GAAG,CAAC,SAASd,KAAK,EAAE,CAAC;EAC/C,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,MAAMe,QAAQ,GAAIC,QAAmB,IAAK;IACxCf,aAAa,CAACe,QAAQ,CAAC;EACzB,CAAC;EAED,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMC,UAAuB,GAAG,CAAC,OAAO,EAAE,MAAM,EAAE,SAAS,CAAC;IAC5D,MAAMC,YAAY,GAAGD,UAAU,CAACE,OAAO,CAACpB,KAAK,CAAC;IAC9C,MAAMqB,SAAS,GAAG,CAACF,YAAY,GAAG,CAAC,IAAID,UAAU,CAACI,MAAM;IACxDP,QAAQ,CAACG,UAAU,CAACG,SAAS,CAAC,CAAC;EACjC,CAAC;EAED,oBACE/B,OAAA,CAACC,YAAY,CAACgC,QAAQ;IAACC,KAAK,EAAE;MAAExB,KAAK;MAAEe,QAAQ;MAAEE;IAAY,CAAE;IAAAnB,QAAA,EAC5DA;EAAQ;IAAA2B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAAC7B,GAAA,CArCWF,aAA2C;AAAAgC,EAAA,GAA3ChC,aAA2C;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}