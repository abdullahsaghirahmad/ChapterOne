{"ast":null,"code":"var _jsxFileName = \"/Users/Projects/ChapterOne/src/components/features/ThreadPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ThreadCard } from './ThreadCard';\nimport { PlusIcon } from '@heroicons/react/24/outline';\nimport axios from 'axios';\nimport { useTheme } from '../../contexts/ThemeContext';\n\n// Define Thread interface\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Helper function to normalize tag data - extract it to reuse in other components too\nexport const normalizeTag = tag => {\n  if (!tag) return '';\n\n  // Handle object with value property\n  if (typeof tag === 'object' && tag !== null && 'value' in tag) {\n    return tag.value;\n  }\n\n  // Handle stringified object format like {\"\"value\"\": \"\"tag\"\"}\n  if (typeof tag === 'string') {\n    // Remove curly braces and quotes to extract clean tag names\n    let cleanTag = tag;\n\n    // Handle malformed JSON like \"{\\\"finance\\\"\" or \"\\\"economics\\\"\" or \"\\\"investing\\\"}\"\n    if (cleanTag.includes('{') || cleanTag.includes('}') || cleanTag.includes('\"')) {\n      // Remove all JSON formatting characters\n      cleanTag = cleanTag.replace(/[{}]/g, '') // Remove curly braces\n      .replace(/\\\\\"/g, '') // Remove escaped quotes\n      .replace(/\"/g, '') // Remove regular quotes\n      .trim();\n    }\n\n    // If it's still empty or just whitespace, return empty string\n    if (!cleanTag || cleanTag.trim() === '') {\n      return '';\n    }\n    return cleanTag;\n  }\n\n  // If it's just a string or other type, return its string representation\n  return String(tag);\n};\nexport const ThreadPage = () => {\n  _s();\n  const {\n    theme\n  } = useTheme();\n  const [showNewThreadForm, setShowNewThreadForm] = useState(false);\n  const [newThreadTitle, setNewThreadTitle] = useState('');\n  const [newThreadDescription, setNewThreadDescription] = useState('');\n  const [selectedTags, setSelectedTags] = useState([]);\n  const [customTag, setCustomTag] = useState('');\n  const [threads, setThreads] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  // Popular tags from existing threads and common book topics\n  const popularTags = ['finance', 'economics', 'investing', 'leadership', 'management', 'team', 'design', 'ux', 'ui', 'product', 'startup', 'business', 'technology', 'self-help', 'psychology', 'philosophy', 'science', 'history', 'biography', 'fiction', 'non-fiction', 'mystery', 'romance', 'fantasy', 'sci-fi', 'career', 'productivity', 'marketing', 'sales', 'entrepreneurship', 'personal-development', 'health', 'wellness', 'education', 'parenting'];\n\n  // Generate tag suggestions based on title and description\n  const generateTagSuggestions = (title, description) => {\n    const text = `${title} ${description}`.toLowerCase();\n    const suggestions = [];\n\n    // Check for keyword matches in popular tags\n    popularTags.forEach(tag => {\n      if (text.includes(tag.toLowerCase()) || text.includes(tag.replace('-', ' ')) || text.includes(tag.replace('-', ''))) {\n        suggestions.push(tag);\n      }\n    });\n\n    // Add some contextual suggestions based on common patterns\n    if (text.includes('book') || text.includes('read') || text.includes('recommend')) {\n      if (!suggestions.includes('books')) suggestions.push('books');\n    }\n    if (text.includes('startup') || text.includes('entrepreneur')) {\n      if (!suggestions.includes('startup')) suggestions.push('startup');\n      if (!suggestions.includes('business')) suggestions.push('business');\n    }\n    if (text.includes('money') || text.includes('financial') || text.includes('invest')) {\n      if (!suggestions.includes('finance')) suggestions.push('finance');\n    }\n    if (text.includes('leader') || text.includes('manage') || text.includes('team')) {\n      if (!suggestions.includes('leadership')) suggestions.push('leadership');\n    }\n    if (text.includes('design') || text.includes('user experience') || text.includes('interface')) {\n      if (!suggestions.includes('design')) suggestions.push('design');\n      if (!suggestions.includes('ux')) suggestions.push('ux');\n    }\n\n    // Always include 'general' as a fallback if no specific tags found\n    if (suggestions.length === 0) {\n      suggestions.push('general');\n    }\n    return suggestions.slice(0, 5); // Limit to 5 suggestions\n  };\n\n  // Update tag suggestions when title or description changes\n  useEffect(() => {\n    if (newThreadTitle || newThreadDescription) {\n      const suggestions = generateTagSuggestions(newThreadTitle, newThreadDescription);\n      // Only auto-add suggestions if no tags are selected yet\n      if (selectedTags.length === 0) {\n        setSelectedTags(suggestions);\n      }\n    }\n  }, [newThreadTitle, newThreadDescription]);\n  const addTag = tag => {\n    const cleanTag = tag.trim().toLowerCase();\n    if (cleanTag && !selectedTags.includes(cleanTag)) {\n      setSelectedTags([...selectedTags, cleanTag]);\n    }\n  };\n  const removeTag = tagToRemove => {\n    setSelectedTags(selectedTags.filter(tag => tag !== tagToRemove));\n  };\n  const handleAddCustomTag = () => {\n    if (customTag.trim()) {\n      addTag(customTag);\n      setCustomTag('');\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      handleAddCustomTag();\n    }\n  };\n\n  // Fetch threads from API\n  useEffect(() => {\n    const fetchThreads = async () => {\n      try {\n        setLoading(true);\n        const response = await axios.get('http://localhost:3001/api/threads');\n        console.log('Threads response:', response.data);\n\n        // Process the threads to ensure tags are properly formatted\n        const processedThreads = response.data.map(thread => {\n          // Process tags to ensure they're an array of strings\n          let processedTags = thread.tags;\n\n          // If tags is a string that looks like a stringified array, parse it\n          if (typeof thread.tags === 'string') {\n            try {\n              processedTags = JSON.parse(thread.tags);\n            } catch {\n              // If parsing fails, split by comma\n              processedTags = thread.tags.split(',').map(t => t.trim());\n            }\n          }\n\n          // Normalize each tag to extract clean string values\n          if (Array.isArray(processedTags)) {\n            processedTags = processedTags.map(normalizeTag);\n          } else if (processedTags) {\n            // If somehow not an array, make it a single-item array\n            processedTags = [normalizeTag(processedTags)];\n          } else {\n            // Default to empty array if tags is null/undefined\n            processedTags = [];\n          }\n          return {\n            ...thread,\n            tags: processedTags\n          };\n        });\n        setThreads(processedThreads);\n        setLoading(false);\n      } catch (err) {\n        console.error('Error fetching threads:', err);\n        setError('Failed to load threads. Please try again later.');\n        setLoading(false);\n      }\n    };\n    fetchThreads();\n  }, []);\n  const handleSubmitThread = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('http://localhost:3001/api/threads', {\n        title: newThreadTitle,\n        description: newThreadDescription,\n        tags: ['General', 'Books']\n      });\n\n      // Make sure to process the new thread's tags too\n      const newThread = {\n        ...response.data,\n        tags: Array.isArray(response.data.tags) ? response.data.tags.map(normalizeTag) : []\n      };\n      setThreads([...threads, newThread]);\n      setShowNewThreadForm(false);\n      setNewThreadTitle('');\n      setNewThreadDescription('');\n    } catch (err) {\n      console.error('Error creating thread:', err);\n      alert('Failed to create thread. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: `text-2xl font-bold transition-colors duration-300 ${theme === 'light' ? 'text-primary-900' : theme === 'dark' ? 'text-white' : 'bg-gradient-to-r from-pink-600 to-purple-600 bg-clip-text text-transparent'}`,\n        children: \"Book Recommendation Threads\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowNewThreadForm(true),\n        className: `flex items-center px-4 py-2 rounded-lg font-medium transition-all duration-300 hover:scale-105 ${theme === 'light' ? 'bg-primary-600 hover:bg-primary-700 text-white' : theme === 'dark' ? 'bg-blue-600 hover:bg-blue-700 text-white' : 'bg-gradient-to-r from-pink-500 to-purple-500 hover:from-pink-600 hover:to-purple-600 text-white'}`,\n        children: [/*#__PURE__*/_jsxDEV(PlusIcon, {\n          className: \"w-5 h-5 mr-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this), \"New Thread\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this), showNewThreadForm && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `rounded-lg p-6 transition-colors duration-300 ${theme === 'light' ? 'bg-white border border-gray-200' : theme === 'dark' ? 'bg-gray-800 border border-gray-700' : 'bg-gradient-to-br from-pink-50 to-purple-50 border border-purple-200'}`,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: `text-xl font-semibold mb-4 transition-colors duration-300 ${theme === 'light' ? 'text-gray-900' : theme === 'dark' ? 'text-white' : 'text-purple-900'}`,\n        children: \"Start a New Thread\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmitThread,\n        className: \"space-y-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"title\",\n            className: `block text-sm font-medium mb-1 transition-colors duration-300 ${theme === 'light' ? 'text-primary-700' : theme === 'dark' ? 'text-gray-300' : 'text-purple-700'}`,\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"title\",\n            value: newThreadTitle,\n            onChange: e => setNewThreadTitle(e.target.value),\n            className: `w-full px-3 py-2 border rounded-lg transition-colors duration-300 focus:outline-none focus:ring-2 ${theme === 'light' ? 'bg-white border-gray-300 text-gray-900 focus:border-primary-500 focus:ring-primary-200' : theme === 'dark' ? 'bg-gray-700 border-gray-600 text-white focus:border-blue-500 focus:ring-blue-200' : 'bg-purple-50 border-purple-300 text-purple-900 focus:border-purple-500 focus:ring-purple-200'}`,\n            placeholder: \"e.g., Books like The Midnight Library\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"description\",\n            className: `block text-sm font-medium mb-1 transition-colors duration-300 ${theme === 'light' ? 'text-primary-700' : theme === 'dark' ? 'text-gray-300' : 'text-purple-700'}`,\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"description\",\n            value: newThreadDescription,\n            onChange: e => setNewThreadDescription(e.target.value),\n            className: `w-full px-3 py-2 border rounded-lg min-h-[100px] transition-colors duration-300 focus:outline-none focus:ring-2 ${theme === 'light' ? 'bg-white border-gray-300 text-gray-900 focus:border-primary-500 focus:ring-primary-200' : theme === 'dark' ? 'bg-gray-700 border-gray-600 text-white focus:border-blue-500 focus:ring-blue-200' : 'bg-purple-50 border-purple-300 text-purple-900 focus:border-purple-500 focus:ring-purple-200'}`,\n            placeholder: \"Describe what you're looking for...\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => setShowNewThreadForm(false),\n            className: `px-4 py-2 rounded-lg font-medium transition-all duration-300 hover:scale-105 ${theme === 'light' ? 'bg-gray-200 hover:bg-gray-300 text-gray-700' : theme === 'dark' ? 'bg-gray-600 hover:bg-gray-500 text-gray-300' : 'bg-purple-200 hover:bg-purple-300 text-purple-700'}`,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: `px-4 py-2 rounded-lg font-medium transition-all duration-300 hover:scale-105 ${theme === 'light' ? 'bg-primary-600 hover:bg-primary-700 text-white' : theme === 'dark' ? 'bg-blue-600 hover:bg-blue-700 text-white' : 'bg-gradient-to-r from-pink-500 to-purple-500 hover:from-pink-600 hover:to-purple-600 text-white'}`,\n            children: \"Create Thread\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 9\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `text-center py-8 transition-colors duration-300 ${theme === 'light' ? 'text-gray-600' : theme === 'dark' ? 'text-gray-300' : 'text-purple-600'}`,\n      children: \"Loading threads...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `text-center py-8 transition-colors duration-300 ${theme === 'light' ? 'text-red-500' : theme === 'dark' ? 'text-red-400' : 'text-pink-600'}`,\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 9\n    }, this), !loading && !error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid gap-4 md:grid-cols-2\",\n      children: threads.length > 0 ? threads.map(thread => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(ThreadCard, {\n          id: thread.id,\n          title: thread.title,\n          description: thread.description,\n          upvotes: thread.upvotes,\n          comments: thread.comments,\n          timestamp: new Date(thread.createdAt).toLocaleDateString(),\n          tags: thread.tags || []\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 17\n        }, this)\n      }, thread.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 15\n      }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `col-span-2 text-center py-8 transition-colors duration-300 ${theme === 'light' ? 'text-gray-600' : theme === 'dark' ? 'text-gray-300' : 'text-purple-600'}`,\n        children: \"No threads found. Be the first to create one!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 234,\n    columnNumber: 5\n  }, this);\n};\n_s(ThreadPage, \"jBEQanI021VF4o10LGB7EIOj6Pg=\", false, function () {\n  return [useTheme];\n});\n_c = ThreadPage;\nvar _c;\n$RefreshReg$(_c, \"ThreadPage\");","map":{"version":3,"names":["React","useState","useEffect","ThreadCard","PlusIcon","axios","useTheme","jsxDEV","_jsxDEV","normalizeTag","tag","value","cleanTag","includes","replace","trim","String","ThreadPage","_s","theme","showNewThreadForm","setShowNewThreadForm","newThreadTitle","setNewThreadTitle","newThreadDescription","setNewThreadDescription","selectedTags","setSelectedTags","customTag","setCustomTag","threads","setThreads","loading","setLoading","error","setError","popularTags","generateTagSuggestions","title","description","text","toLowerCase","suggestions","forEach","push","length","slice","addTag","removeTag","tagToRemove","filter","handleAddCustomTag","handleKeyPress","e","key","preventDefault","fetchThreads","response","get","console","log","data","processedThreads","map","thread","processedTags","tags","JSON","parse","split","t","Array","isArray","err","handleSubmitThread","post","newThread","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","htmlFor","type","id","onChange","target","placeholder","required","upvotes","comments","timestamp","Date","createdAt","toLocaleDateString","_c","$RefreshReg$"],"sources":["/Users/Projects/ChapterOne/src/components/features/ThreadPage.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { ThreadCard } from './ThreadCard';\nimport { PlusIcon } from '@heroicons/react/24/outline';\nimport axios from 'axios';\nimport { useTheme } from '../../contexts/ThemeContext';\n\n// Define Thread interface\ninterface Thread {\n  id: string;\n  title: string;\n  description: string;\n  upvotes: number;\n  comments: number;\n  tags: string[];\n  createdAt: string;\n  updatedAt: string;\n  books?: any[];\n}\n\n// Helper function to normalize tag data - extract it to reuse in other components too\nexport const normalizeTag = (tag: any): string => {\n  if (!tag) return '';\n  \n  // Handle object with value property\n  if (typeof tag === 'object' && tag !== null && 'value' in tag) {\n    return tag.value;\n  }\n  \n  // Handle stringified object format like {\"\"value\"\": \"\"tag\"\"}\n  if (typeof tag === 'string') {\n    // Remove curly braces and quotes to extract clean tag names\n    let cleanTag = tag;\n    \n    // Handle malformed JSON like \"{\\\"finance\\\"\" or \"\\\"economics\\\"\" or \"\\\"investing\\\"}\"\n    if (cleanTag.includes('{') || cleanTag.includes('}') || cleanTag.includes('\"')) {\n      // Remove all JSON formatting characters\n      cleanTag = cleanTag\n        .replace(/[{}]/g, '') // Remove curly braces\n        .replace(/\\\\\"/g, '') // Remove escaped quotes\n        .replace(/\"/g, '') // Remove regular quotes\n        .trim();\n    }\n    \n    // If it's still empty or just whitespace, return empty string\n    if (!cleanTag || cleanTag.trim() === '') {\n      return '';\n    }\n    \n    return cleanTag;\n  }\n  \n  // If it's just a string or other type, return its string representation\n  return String(tag);\n};\n\nexport const ThreadPage = () => {\n  const { theme } = useTheme();\n  const [showNewThreadForm, setShowNewThreadForm] = useState(false);\n  const [newThreadTitle, setNewThreadTitle] = useState('');\n  const [newThreadDescription, setNewThreadDescription] = useState('');\n  const [selectedTags, setSelectedTags] = useState<string[]>([]);\n  const [customTag, setCustomTag] = useState('');\n  const [threads, setThreads] = useState<Thread[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  // Popular tags from existing threads and common book topics\n  const popularTags = [\n    'finance', 'economics', 'investing', 'leadership', 'management', 'team',\n    'design', 'ux', 'ui', 'product', 'startup', 'business', 'technology',\n    'self-help', 'psychology', 'philosophy', 'science', 'history', 'biography',\n    'fiction', 'non-fiction', 'mystery', 'romance', 'fantasy', 'sci-fi',\n    'career', 'productivity', 'marketing', 'sales', 'entrepreneurship',\n    'personal-development', 'health', 'wellness', 'education', 'parenting'\n  ];\n\n  // Generate tag suggestions based on title and description\n  const generateTagSuggestions = (title: string, description: string): string[] => {\n    const text = `${title} ${description}`.toLowerCase();\n    const suggestions: string[] = [];\n\n    // Check for keyword matches in popular tags\n    popularTags.forEach(tag => {\n      if (text.includes(tag.toLowerCase()) || \n          text.includes(tag.replace('-', ' ')) ||\n          text.includes(tag.replace('-', ''))) {\n        suggestions.push(tag);\n      }\n    });\n\n    // Add some contextual suggestions based on common patterns\n    if (text.includes('book') || text.includes('read') || text.includes('recommend')) {\n      if (!suggestions.includes('books')) suggestions.push('books');\n    }\n    if (text.includes('startup') || text.includes('entrepreneur')) {\n      if (!suggestions.includes('startup')) suggestions.push('startup');\n      if (!suggestions.includes('business')) suggestions.push('business');\n    }\n    if (text.includes('money') || text.includes('financial') || text.includes('invest')) {\n      if (!suggestions.includes('finance')) suggestions.push('finance');\n    }\n    if (text.includes('leader') || text.includes('manage') || text.includes('team')) {\n      if (!suggestions.includes('leadership')) suggestions.push('leadership');\n    }\n    if (text.includes('design') || text.includes('user experience') || text.includes('interface')) {\n      if (!suggestions.includes('design')) suggestions.push('design');\n      if (!suggestions.includes('ux')) suggestions.push('ux');\n    }\n\n    // Always include 'general' as a fallback if no specific tags found\n    if (suggestions.length === 0) {\n      suggestions.push('general');\n    }\n\n    return suggestions.slice(0, 5); // Limit to 5 suggestions\n  };\n\n  // Update tag suggestions when title or description changes\n  useEffect(() => {\n    if (newThreadTitle || newThreadDescription) {\n      const suggestions = generateTagSuggestions(newThreadTitle, newThreadDescription);\n      // Only auto-add suggestions if no tags are selected yet\n      if (selectedTags.length === 0) {\n        setSelectedTags(suggestions);\n      }\n    }\n  }, [newThreadTitle, newThreadDescription]);\n\n  const addTag = (tag: string) => {\n    const cleanTag = tag.trim().toLowerCase();\n    if (cleanTag && !selectedTags.includes(cleanTag)) {\n      setSelectedTags([...selectedTags, cleanTag]);\n    }\n  };\n\n  const removeTag = (tagToRemove: string) => {\n    setSelectedTags(selectedTags.filter(tag => tag !== tagToRemove));\n  };\n\n  const handleAddCustomTag = () => {\n    if (customTag.trim()) {\n      addTag(customTag);\n      setCustomTag('');\n    }\n  };\n\n  const handleKeyPress = (e: React.KeyboardEvent) => {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      handleAddCustomTag();\n    }\n  };\n\n  // Fetch threads from API\n  useEffect(() => {\n    const fetchThreads = async () => {\n      try {\n        setLoading(true);\n        const response = await axios.get<Thread[]>('http://localhost:3001/api/threads');\n        console.log('Threads response:', response.data);\n        \n        // Process the threads to ensure tags are properly formatted\n        const processedThreads = response.data.map(thread => {\n          // Process tags to ensure they're an array of strings\n          let processedTags = thread.tags;\n          \n          // If tags is a string that looks like a stringified array, parse it\n          if (typeof thread.tags === 'string') {\n            try {\n              processedTags = JSON.parse(thread.tags as any);\n            } catch {\n              // If parsing fails, split by comma\n              processedTags = (thread.tags as any).split(',').map((t: string) => t.trim());\n            }\n          }\n          \n          // Normalize each tag to extract clean string values\n          if (Array.isArray(processedTags)) {\n            processedTags = processedTags.map(normalizeTag);\n          } else if (processedTags) {\n            // If somehow not an array, make it a single-item array\n            processedTags = [normalizeTag(processedTags)];\n          } else {\n            // Default to empty array if tags is null/undefined\n            processedTags = [];\n          }\n          \n          return {\n            ...thread,\n            tags: processedTags\n          };\n        });\n        \n        setThreads(processedThreads);\n        setLoading(false);\n      } catch (err) {\n        console.error('Error fetching threads:', err);\n        setError('Failed to load threads. Please try again later.');\n        setLoading(false);\n      }\n    };\n\n    fetchThreads();\n  }, []);\n\n  const handleSubmitThread = async (e: React.FormEvent) => {\n    e.preventDefault();\n    try {\n      const response = await axios.post<Thread>('http://localhost:3001/api/threads', {\n        title: newThreadTitle,\n        description: newThreadDescription,\n        tags: ['General', 'Books']\n      });\n      \n      // Make sure to process the new thread's tags too\n      const newThread = {\n        ...response.data,\n        tags: Array.isArray(response.data.tags) \n          ? response.data.tags.map(normalizeTag) \n          : []\n      };\n      \n      setThreads([...threads, newThread]);\n      setShowNewThreadForm(false);\n      setNewThreadTitle('');\n      setNewThreadDescription('');\n    } catch (err) {\n      console.error('Error creating thread:', err);\n      alert('Failed to create thread. Please try again.');\n    }\n  };\n\n  return (\n    <div className=\"space-y-8\">\n      {/* Header */}\n      <div className=\"flex justify-between items-center\">\n        <h1 className={`text-2xl font-bold transition-colors duration-300 ${\n          theme === 'light'\n            ? 'text-primary-900'\n            : theme === 'dark'\n            ? 'text-white'\n            : 'bg-gradient-to-r from-pink-600 to-purple-600 bg-clip-text text-transparent'\n        }`}>\n          Book Recommendation Threads\n        </h1>\n        <button\n          onClick={() => setShowNewThreadForm(true)}\n          className={`flex items-center px-4 py-2 rounded-lg font-medium transition-all duration-300 hover:scale-105 ${\n            theme === 'light'\n              ? 'bg-primary-600 hover:bg-primary-700 text-white'\n              : theme === 'dark'\n              ? 'bg-blue-600 hover:bg-blue-700 text-white'\n              : 'bg-gradient-to-r from-pink-500 to-purple-500 hover:from-pink-600 hover:to-purple-600 text-white'\n          }`}\n        >\n          <PlusIcon className=\"w-5 h-5 mr-2\" />\n          New Thread\n        </button>\n      </div>\n\n      {/* New Thread Form */}\n      {showNewThreadForm && (\n        <div className={`rounded-lg p-6 transition-colors duration-300 ${\n          theme === 'light'\n            ? 'bg-white border border-gray-200'\n            : theme === 'dark'\n            ? 'bg-gray-800 border border-gray-700'\n            : 'bg-gradient-to-br from-pink-50 to-purple-50 border border-purple-200'\n        }`}>\n          <h2 className={`text-xl font-semibold mb-4 transition-colors duration-300 ${\n            theme === 'light'\n              ? 'text-gray-900'\n              : theme === 'dark'\n              ? 'text-white'\n              : 'text-purple-900'\n          }`}>\n            Start a New Thread\n          </h2>\n          <form onSubmit={handleSubmitThread} className=\"space-y-4\">\n            <div>\n              <label htmlFor=\"title\" className={`block text-sm font-medium mb-1 transition-colors duration-300 ${\n                theme === 'light'\n                  ? 'text-primary-700'\n                  : theme === 'dark'\n                  ? 'text-gray-300'\n                  : 'text-purple-700'\n              }`}>\n                Title\n              </label>\n              <input\n                type=\"text\"\n                id=\"title\"\n                value={newThreadTitle}\n                onChange={(e) => setNewThreadTitle(e.target.value)}\n                className={`w-full px-3 py-2 border rounded-lg transition-colors duration-300 focus:outline-none focus:ring-2 ${\n                  theme === 'light'\n                    ? 'bg-white border-gray-300 text-gray-900 focus:border-primary-500 focus:ring-primary-200'\n                    : theme === 'dark'\n                    ? 'bg-gray-700 border-gray-600 text-white focus:border-blue-500 focus:ring-blue-200'\n                    : 'bg-purple-50 border-purple-300 text-purple-900 focus:border-purple-500 focus:ring-purple-200'\n                }`}\n                placeholder=\"e.g., Books like The Midnight Library\"\n                required\n              />\n            </div>\n            <div>\n              <label htmlFor=\"description\" className={`block text-sm font-medium mb-1 transition-colors duration-300 ${\n                theme === 'light'\n                  ? 'text-primary-700'\n                  : theme === 'dark'\n                  ? 'text-gray-300'\n                  : 'text-purple-700'\n              }`}>\n                Description\n              </label>\n              <textarea\n                id=\"description\"\n                value={newThreadDescription}\n                onChange={(e) => setNewThreadDescription(e.target.value)}\n                className={`w-full px-3 py-2 border rounded-lg min-h-[100px] transition-colors duration-300 focus:outline-none focus:ring-2 ${\n                  theme === 'light'\n                    ? 'bg-white border-gray-300 text-gray-900 focus:border-primary-500 focus:ring-primary-200'\n                    : theme === 'dark'\n                    ? 'bg-gray-700 border-gray-600 text-white focus:border-blue-500 focus:ring-blue-200'\n                    : 'bg-purple-50 border-purple-300 text-purple-900 focus:border-purple-500 focus:ring-purple-200'\n                }`}\n                placeholder=\"Describe what you're looking for...\"\n                required\n              />\n            </div>\n            <div className=\"flex justify-end gap-2\">\n              <button\n                type=\"button\"\n                onClick={() => setShowNewThreadForm(false)}\n                className={`px-4 py-2 rounded-lg font-medium transition-all duration-300 hover:scale-105 ${\n                  theme === 'light'\n                    ? 'bg-gray-200 hover:bg-gray-300 text-gray-700'\n                    : theme === 'dark'\n                    ? 'bg-gray-600 hover:bg-gray-500 text-gray-300'\n                    : 'bg-purple-200 hover:bg-purple-300 text-purple-700'\n                }`}\n              >\n                Cancel\n              </button>\n              <button type=\"submit\" className={`px-4 py-2 rounded-lg font-medium transition-all duration-300 hover:scale-105 ${\n                theme === 'light'\n                  ? 'bg-primary-600 hover:bg-primary-700 text-white'\n                  : theme === 'dark'\n                  ? 'bg-blue-600 hover:bg-blue-700 text-white'\n                  : 'bg-gradient-to-r from-pink-500 to-purple-500 hover:from-pink-600 hover:to-purple-600 text-white'\n              }`}>\n                Create Thread\n              </button>\n            </div>\n          </form>\n        </div>\n      )}\n\n      {/* Loading and Error States */}\n      {loading && (\n        <div className={`text-center py-8 transition-colors duration-300 ${\n          theme === 'light'\n            ? 'text-gray-600'\n            : theme === 'dark'\n            ? 'text-gray-300'\n            : 'text-purple-600'\n        }`}>\n          Loading threads...\n        </div>\n      )}\n      {error && (\n        <div className={`text-center py-8 transition-colors duration-300 ${\n          theme === 'light'\n            ? 'text-red-500'\n            : theme === 'dark'\n            ? 'text-red-400'\n            : 'text-pink-600'\n        }`}>\n          {error}\n        </div>\n      )}\n\n      {/* Threads List */}\n      {!loading && !error && (\n        <div className=\"grid gap-4 md:grid-cols-2\">\n          {threads.length > 0 ? (\n            threads.map((thread) => (\n              <div key={thread.id}>\n                <ThreadCard\n                  id={thread.id}\n                  title={thread.title}\n                  description={thread.description}\n                  upvotes={thread.upvotes}\n                  comments={thread.comments}\n                  timestamp={new Date(thread.createdAt).toLocaleDateString()}\n                  tags={thread.tags || []}\n                />\n              </div>\n            ))\n          ) : (\n            <div className={`col-span-2 text-center py-8 transition-colors duration-300 ${\n              theme === 'light'\n                ? 'text-gray-600'\n                : theme === 'dark'\n                ? 'text-gray-300'\n                : 'text-purple-600'\n            }`}>\n              No threads found. Be the first to create one!\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}