{"ast":null,"code":"var _jsxFileName = \"/Users/Projects/ChapterOne/src/components/features/BooksPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { BookCard } from './BookCard';\nimport { SearchBar } from './SearchBar';\nimport { api } from '../../services/api';\nimport { Switch } from '../ui/Switch';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\n// Interface for Pace objects that might be returned from API\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Helper function to safely extract value from an object or return the value itself\nconst extractValue = item => {\n  if (typeof item === 'object' && item !== null && 'value' in item) {\n    return item.value;\n  }\n  return (item === null || item === void 0 ? void 0 : item.toString()) || '';\n};\nexport const BooksPage = () => {\n  _s();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [books, setBooks] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [includeExternal, setIncludeExternal] = useState(true);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchType, setSearchType] = useState('all');\n\n  // Handle URL search parameters when component loads\n  useEffect(() => {\n    const queryParams = new URLSearchParams(location.search);\n    const queryFromUrl = queryParams.get('query');\n    const typeFromUrl = queryParams.get('type');\n    if (queryFromUrl) {\n      setSearchQuery(queryFromUrl);\n      if (typeFromUrl) {\n        setSearchType(typeFromUrl);\n      }\n      // Fetch books with URL parameters\n      fetchBooks(queryFromUrl, typeFromUrl || 'all', includeExternal);\n    } else {\n      // If no search params, fetch all books\n      fetchBooks();\n    }\n  }, [location.search, includeExternal]);\n  const fetchBooks = async (query = '', type = 'all', useExternal = includeExternal) => {\n    setLoading(true);\n    setError(null);\n    try {\n      let data;\n      if (query) {\n        console.log(`Searching for \"${query}\" in category \"${type}\"`);\n        data = await api.searchBooks(query, type, useExternal);\n      } else {\n        data = await api.getBooks(useExternal);\n      }\n\n      // Process the books to handle all fields that might be objects\n      const processedData = data.map(book => {\n        // Process any string arrays that might be returned as JSON strings or objects\n        let processedThemes = book.themes;\n        let processedTone = book.tone;\n        let processedProfessions = book.professions;\n        let processedBestFor = book.bestFor;\n\n        // Handle if themes is a string (potentially a stringified array)\n        if (typeof book.themes === 'string') {\n          try {\n            // Try to parse as JSON\n            processedThemes = JSON.parse(book.themes);\n          } catch (e) {\n            processedThemes = book.themes.split(',').map(t => t.trim());\n          }\n        }\n\n        // Process arrays that might have objects or JSON strings\n        if (Array.isArray(processedThemes)) {\n          processedThemes = processedThemes.map(t => {\n            if (typeof t === 'object' && t !== null && 'value' in t) {\n              return t.value;\n            }\n            // Convert any string that looks like \"{\"\"value\"\": \"\"theme\"\"}\" to \"theme\"\n            if (typeof t === 'string' && t.includes('{\"\"') && t.includes('\"\"value\"\"')) {\n              try {\n                // Try to extract value between quotes\n                const match = t.match(/\"\"value\"\"\\s*:\\s*\"\"([^\"\"]+)\"\"/);\n                if (match && match[1]) {\n                  return match[1];\n                }\n              } catch (e) {\n                // Just return original if extraction fails\n              }\n            }\n            return t;\n          });\n        }\n\n        // Handle tone the same way\n        if (typeof book.tone === 'string') {\n          try {\n            processedTone = JSON.parse(book.tone);\n          } catch (e) {\n            processedTone = book.tone.split(',').map(t => t.trim());\n          }\n        }\n        if (Array.isArray(processedTone)) {\n          processedTone = processedTone.map(t => extractValue(t));\n        }\n\n        // Handle professions the same way\n        if (typeof book.professions === 'string') {\n          try {\n            processedProfessions = JSON.parse(book.professions);\n          } catch (e) {\n            processedProfessions = book.professions.split(',').map(p => p.trim());\n          }\n        }\n        if (Array.isArray(processedProfessions)) {\n          processedProfessions = processedProfessions.map(p => extractValue(p));\n        }\n\n        // Handle bestFor field\n        if (typeof book.bestFor === 'string') {\n          try {\n            processedBestFor = JSON.parse(book.bestFor);\n          } catch (e) {\n            processedBestFor = book.bestFor.split(',').map(b => b.trim());\n          }\n        }\n        if (Array.isArray(processedBestFor)) {\n          processedBestFor = processedBestFor.map(b => extractValue(b));\n        } else if (!processedBestFor) {\n          // Default to empty array if bestFor is null/undefined\n          processedBestFor = [];\n        }\n\n        // Process pace field - ensure it's always a string\n        let processedPace;\n        if (typeof book.pace === 'object' && book.pace !== null) {\n          // Cast to PaceObject type to access value property safely\n          const paceObj = book.pace;\n          processedPace = paceObj.value || \"Moderate\";\n        } else {\n          var _book$pace;\n          processedPace = ((_book$pace = book.pace) === null || _book$pace === void 0 ? void 0 : _book$pace.toString()) || \"Moderate\";\n        }\n\n        // Return processed book data with clean fields\n        return {\n          ...book,\n          pace: processedPace,\n          tone: Array.isArray(processedTone) ? processedTone : [],\n          themes: Array.isArray(processedThemes) ? processedThemes : [],\n          professions: Array.isArray(processedProfessions) ? processedProfessions : [],\n          bestFor: Array.isArray(processedBestFor) ? processedBestFor : []\n        };\n      });\n      console.log('Processed books:', processedData);\n      setBooks(processedData);\n    } catch (err) {\n      console.error('Error processing books:', err);\n      setError(err instanceof Error ? err.message : 'Failed to load data. Please try again later.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handler for SearchBar\n  const handleSearch = (query, type = 'all') => {\n    setSearchQuery(query);\n    setSearchType(type);\n    fetchBooks(query, type, includeExternal);\n\n    // Update URL to reflect the search\n    const searchParams = new URLSearchParams();\n    if (query) {\n      searchParams.set('query', query);\n      if (type !== 'all') {\n        searchParams.set('type', type);\n      }\n      navigate(`/books?${searchParams.toString()}`);\n    } else {\n      navigate('/books');\n    }\n  };\n  const handleExternalToggle = () => {\n    const newIncludeExternal = !includeExternal;\n    setIncludeExternal(newIncludeExternal);\n    fetchBooks(searchQuery, searchType, newIncludeExternal);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center py-10\",\n      children: \"Loading books...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center py-10 text-red-600\",\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center space-y-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-bold text-primary-900\",\n        children: \"Book Recommendations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-lg text-primary-600\",\n        children: \"Discover books that match your interests and reading style\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-3xl mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n        onSearch: handleSearch,\n        onMoodSelect: mood => handleSearch(mood, 'mood')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-end mt-4 space-x-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-sm text-gray-600\",\n          children: \"Include more books from external sources\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Switch, {\n          checked: includeExternal,\n          onChange: handleExternalToggle,\n          className: \"data-[state=checked]:bg-green-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this), books.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center py-10\",\n      children: \"No books found. Try a different search or enable external sources.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4 text-sm text-gray-600\",\n        children: [\"Found \", books.length, \" books \", searchQuery ? `for \"${searchQuery}\"` : '', searchType !== 'all' && ` by ${searchType}`]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid gap-6 grid-cols-1 lg:grid-cols-2\",\n        children: books.map(book => /*#__PURE__*/_jsxDEV(BookCard, {\n          title: book.title,\n          author: book.author,\n          coverImage: book.coverImage,\n          pace: book.pace,\n          tone: book.tone,\n          themes: book.themes,\n          description: book.description || \"No description available\",\n          bestFor: book.bestFor,\n          isExternal: book.isExternal || false\n        }, book.id || `${book.title}-${book.author}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 217,\n    columnNumber: 5\n  }, this);\n};\n_s(BooksPage, \"VyWouRCWkFMAZSVlwBTo5t1B5XA=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = BooksPage;\nvar _c;\n$RefreshReg$(_c, \"BooksPage\");","map":{"version":3,"names":["React","useEffect","useState","BookCard","SearchBar","api","Switch","useLocation","useNavigate","jsxDEV","_jsxDEV","extractValue","item","value","toString","BooksPage","_s","location","navigate","books","setBooks","error","setError","loading","setLoading","includeExternal","setIncludeExternal","searchQuery","setSearchQuery","searchType","setSearchType","queryParams","URLSearchParams","search","queryFromUrl","get","typeFromUrl","fetchBooks","query","type","useExternal","data","console","log","searchBooks","getBooks","processedData","map","book","processedThemes","themes","processedTone","tone","processedProfessions","professions","processedBestFor","bestFor","JSON","parse","e","split","t","trim","Array","isArray","includes","match","p","b","processedPace","pace","paceObj","_book$pace","err","Error","message","handleSearch","searchParams","set","handleExternalToggle","newIncludeExternal","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","onMoodSelect","mood","checked","onChange","length","title","author","coverImage","description","isExternal","id","_c","$RefreshReg$"],"sources":["/Users/Projects/ChapterOne/src/components/features/BooksPage.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { BookCard } from './BookCard';\nimport { SearchBar } from './SearchBar';\nimport { api } from '../../services/api';\nimport { Book, Pace } from '../../types';\nimport { Switch } from '../ui/Switch';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\n// Interface for Pace objects that might be returned from API\ninterface PaceObject {\n  type: string;\n  value: Pace;\n}\n\n// Helper function to safely extract value from an object or return the value itself\nconst extractValue = (item: any): string => {\n  if (typeof item === 'object' && item !== null && 'value' in item) {\n    return item.value;\n  }\n  return item?.toString() || '';\n};\n\nexport const BooksPage = () => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [books, setBooks] = useState<Book[]>([]);\n  const [error, setError] = useState<string | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [includeExternal, setIncludeExternal] = useState(true);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchType, setSearchType] = useState('all');\n\n  // Handle URL search parameters when component loads\n  useEffect(() => {\n    const queryParams = new URLSearchParams(location.search);\n    const queryFromUrl = queryParams.get('query');\n    const typeFromUrl = queryParams.get('type');\n    \n    if (queryFromUrl) {\n      setSearchQuery(queryFromUrl);\n      if (typeFromUrl) {\n        setSearchType(typeFromUrl);\n      }\n      // Fetch books with URL parameters\n      fetchBooks(queryFromUrl, typeFromUrl || 'all', includeExternal);\n    } else {\n      // If no search params, fetch all books\n      fetchBooks();\n    }\n  }, [location.search, includeExternal]);\n\n  const fetchBooks = async (\n    query: string = '', \n    type: string = 'all', \n    useExternal: boolean = includeExternal\n  ) => {\n    setLoading(true);\n    setError(null);\n    \n    try {\n      let data: Book[];\n      \n      if (query) {\n        console.log(`Searching for \"${query}\" in category \"${type}\"`);\n        data = await api.searchBooks(query, type, useExternal);\n      } else {\n        data = await api.getBooks(useExternal);\n      }\n      \n      // Process the books to handle all fields that might be objects\n      const processedData = data.map(book => {\n        // Process any string arrays that might be returned as JSON strings or objects\n        let processedThemes = book.themes;\n        let processedTone = book.tone;\n        let processedProfessions = book.professions;\n        let processedBestFor = book.bestFor;\n        \n        // Handle if themes is a string (potentially a stringified array)\n        if (typeof book.themes === 'string') {\n          try {\n            // Try to parse as JSON\n            processedThemes = JSON.parse(book.themes as string);\n          } catch (e) {\n            processedThemes = (book.themes as string).split(',').map((t: string) => t.trim());\n          }\n        }\n        \n        // Process arrays that might have objects or JSON strings\n        if (Array.isArray(processedThemes)) {\n          processedThemes = processedThemes.map((t: any) => {\n            if (typeof t === 'object' && t !== null && 'value' in t) {\n              return t.value as string;\n            }\n            // Convert any string that looks like \"{\"\"value\"\": \"\"theme\"\"}\" to \"theme\"\n            if (typeof t === 'string' && t.includes('{\"\"') && t.includes('\"\"value\"\"')) {\n              try {\n                // Try to extract value between quotes\n                const match = t.match(/\"\"value\"\"\\s*:\\s*\"\"([^\"\"]+)\"\"/);\n                if (match && match[1]) {\n                  return match[1];\n                }\n              } catch (e) {\n                // Just return original if extraction fails\n              }\n            }\n            return t;\n          });\n        }\n\n        // Handle tone the same way\n        if (typeof book.tone === 'string') {\n          try {\n            processedTone = JSON.parse(book.tone as string);\n          } catch (e) {\n            processedTone = (book.tone as string).split(',').map((t: string) => t.trim());\n          }\n        }\n        \n        if (Array.isArray(processedTone)) {\n          processedTone = processedTone.map((t: any) => extractValue(t));\n        }\n        \n        // Handle professions the same way\n        if (typeof book.professions === 'string') {\n          try {\n            processedProfessions = JSON.parse(book.professions as string);\n          } catch (e) {\n            processedProfessions = (book.professions as string).split(',').map((p: string) => p.trim());\n          }\n        }\n        \n        if (Array.isArray(processedProfessions)) {\n          processedProfessions = processedProfessions.map((p: any) => extractValue(p));\n        }\n        \n        // Handle bestFor field\n        if (typeof book.bestFor === 'string') {\n          try {\n            processedBestFor = JSON.parse(book.bestFor as string);\n          } catch (e) {\n            processedBestFor = (book.bestFor as string).split(',').map((b: string) => b.trim());\n          }\n        }\n        \n        if (Array.isArray(processedBestFor)) {\n          processedBestFor = processedBestFor.map((b: any) => extractValue(b));\n        } else if (!processedBestFor) {\n          // Default to empty array if bestFor is null/undefined\n          processedBestFor = [];\n        }\n        \n        // Process pace field - ensure it's always a string\n        let processedPace: string;\n        if (typeof book.pace === 'object' && book.pace !== null) {\n          // Cast to PaceObject type to access value property safely\n          const paceObj = book.pace as { value?: string };\n          processedPace = paceObj.value || \"Moderate\";\n        } else {\n          processedPace = book.pace?.toString() || \"Moderate\";\n        }\n        \n        // Return processed book data with clean fields\n        return {\n          ...book,\n          pace: processedPace as Pace,\n          tone: Array.isArray(processedTone) ? processedTone : [],\n          themes: Array.isArray(processedThemes) ? processedThemes : [],\n          professions: Array.isArray(processedProfessions) ? processedProfessions : [],\n          bestFor: Array.isArray(processedBestFor) ? processedBestFor : []\n        };\n      });\n      \n      console.log('Processed books:', processedData);\n      setBooks(processedData);\n    } catch (err) {\n      console.error('Error processing books:', err);\n      setError(err instanceof Error ? err.message : 'Failed to load data. Please try again later.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handler for SearchBar\n  const handleSearch = (query: string, type: string = 'all') => {\n    setSearchQuery(query);\n    setSearchType(type);\n    fetchBooks(query, type, includeExternal);\n    \n    // Update URL to reflect the search\n    const searchParams = new URLSearchParams();\n    if (query) {\n      searchParams.set('query', query);\n      if (type !== 'all') {\n        searchParams.set('type', type);\n      }\n      navigate(`/books?${searchParams.toString()}`);\n    } else {\n      navigate('/books');\n    }\n  };\n\n  const handleExternalToggle = () => {\n    const newIncludeExternal = !includeExternal;\n    setIncludeExternal(newIncludeExternal);\n    fetchBooks(searchQuery, searchType, newIncludeExternal);\n  };\n\n  if (loading) {\n    return <div className=\"text-center py-10\">Loading books...</div>;\n  }\n\n  if (error) {\n    return <div className=\"text-center py-10 text-red-600\">Error: {error}</div>;\n  }\n\n  return (\n    <div className=\"space-y-8\">\n      {/* Header */}\n      <div className=\"text-center space-y-4\">\n        <h1 className=\"text-3xl font-bold text-primary-900\">Book Recommendations</h1>\n        <p className=\"text-lg text-primary-600\">\n          Discover books that match your interests and reading style\n        </p>\n      </div>\n\n      {/* Search */}\n      <div className=\"max-w-3xl mx-auto\">\n        <SearchBar \n          onSearch={handleSearch}\n          onMoodSelect={(mood) => handleSearch(mood, 'mood')}\n        />\n        \n        {/* External API Toggle */}\n        <div className=\"flex items-center justify-end mt-4 space-x-2\">\n          <span className=\"text-sm text-gray-600\">Include more books from external sources</span>\n          <Switch\n            checked={includeExternal}\n            onChange={handleExternalToggle}\n            className=\"data-[state=checked]:bg-green-500\"\n          />\n        </div>\n      </div>\n\n      {/* Books Grid */}\n      {books.length === 0 ? (\n        <div className=\"text-center py-10\">No books found. Try a different search or enable external sources.</div>\n      ) : (\n        <div>\n          {/* Search result info */}\n          <div className=\"mb-4 text-sm text-gray-600\">\n            Found {books.length} books {searchQuery ? `for \"${searchQuery}\"` : ''}\n            {searchType !== 'all' && ` by ${searchType}`}\n          </div>\n          \n          {/* Books grid */}\n          <div className=\"grid gap-6 grid-cols-1 lg:grid-cols-2\">\n            {books.map((book) => (\n              <BookCard\n                key={book.id || `${book.title}-${book.author}`}\n                title={book.title}\n                author={book.author}\n                coverImage={book.coverImage}\n                pace={book.pace as Pace}\n                tone={book.tone}\n                themes={book.themes}\n                description={book.description || \"No description available\"}\n                bestFor={book.bestFor}\n                isExternal={book.isExternal || false}\n              />\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}